# Generated by Django 4.1.13 on 2025-07-18 00:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Evento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome do evento"),
                ),
                ("data", models.DateTimeField(verbose_name="Data e hora do evento")),
                (
                    "local",
                    models.CharField(max_length=200, verbose_name="Local do evento"),
                ),
                (
                    "capacidade",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Capacidade máxima",
                    ),
                ),
                ("descricao", models.TextField(verbose_name="Descrição do evento")),
                (
                    "preco_ingresso",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Preço do ingresso",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ATIVO", "Ativo"),
                            ("CANCELADO", "Cancelado"),
                            ("FINALIZADO", "Finalizado"),
                        ],
                        default="ATIVO",
                        max_length=20,
                        verbose_name="Status do evento",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Evento",
                "verbose_name_plural": "Eventos",
                "ordering": ["data"],
            },
        ),
        migrations.CreateModel(
            name="Participante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome completo"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                ("telefone", models.CharField(max_length=20, verbose_name="Telefone")),
                (
                    "data_nascimento",
                    models.DateField(verbose_name="Data de nascimento"),
                ),
                (
                    "cpf",
                    models.CharField(max_length=14, unique=True, verbose_name="CPF"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Participante",
                "verbose_name_plural": "Participantes",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Ingresso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("VIP", "VIP"),
                            ("PADRAO", "Padrão"),
                            ("ESTUDANTE", "Estudante"),
                            ("IDOSO", "Idoso"),
                        ],
                        max_length=20,
                        verbose_name="Tipo do ingresso",
                    ),
                ),
                (
                    "preco",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Preço"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ATIVO", "Ativo"),
                            ("USADO", "Usado"),
                            ("CANCELADO", "Cancelado"),
                        ],
                        default="ATIVO",
                        max_length=20,
                        verbose_name="Status do ingresso",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "evento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingressos",
                        to="eventos.evento",
                        verbose_name="Evento",
                    ),
                ),
                (
                    "participante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingressos",
                        to="eventos.participante",
                        verbose_name="Participante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingresso",
                "verbose_name_plural": "Ingressos",
                "ordering": ["evento", "tipo"],
            },
        ),
    ]
